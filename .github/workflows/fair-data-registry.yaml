name: FAIR Data Registry
on: [push]
jobs:
  test:
    name: Test ${{ matrix.os }} with Python ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python: ["3.7", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install graphviz on ubuntu
        run:  |
              if [ ${{ runner.os }} == "Linux" ]; then
                  sudo apt-get install graphviz
              else
                  brew install graphviz
              fi
      - name: Install Python dependencies
        uses: py-actions/py-dependency-install@v2
        with:
          path: "local-requirements.txt"
      - name: Run Tests
        run: DJANGO_SETTINGS_MODULE=drams.test-settings coverage run --omit=drams,scripts,tools manage.py test 
      - name: Generate XML
        run: coverage xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          env_vars: OS,PYTHON
          files: ./coverage.xml
          flags: unittests
          verbose: true
  deploy-local-registry:
    name: Deploy local registry on ${{ matrix.os }} with Python ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python: ["3.7"]
    env:
      REGISTRY_PORT: 8001
      INSTALL_DIR: fair
    steps:
      - uses: actions/setup-python@v2
      - name: Deploy registry
        if: startsWith(github.ref, 'refs/tags/') != true
        run: curl -fsSL https://raw.githubusercontent.com/FAIRDataPipeline/data-registry/${GITHUB_REF/refs\/heads\//}/static/localregistry.sh | bash -s -- -d $INSTALL_DIR -b ${GITHUB_REF/refs\/heads\//}
      - name: Deploy registry (Tagged Release)
        if: startsWith(github.ref, 'refs/tags/')
        run: curl -fsSL https://raw.githubusercontent.com/FAIRDataPipeline/data-registry/${GITHUB_REF/refs\/tags\//}/static/localregistry.sh | bash -s -- -d $INSTALL_DIR -t ${GITHUB_REF/refs\/tags\//}
      - name: Start registry
        run:  |
              $INSTALL_DIR/registry/scripts/start_fair_registry -p $REGISTRY_PORT
      - name: Test registry
        run: curl http://localhost:$REGISTRY_PORT/api/
  deploy-local-registry-windows:
    name: Deploy Local Registry on Windows
    runs-on: windows-latest
    env:
      REGISTRY_PORT: 8001
      INSTALL_DIR: fair
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install CURL
        run: | 
          choco install curl
          choco install wget
      - name: Branch name
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
        shell: bash
      - name: Deploy registry
        if: startsWith(github.ref, 'refs/tags/') != true
        shell: cmd
        run: |
          wget https://raw.githubusercontent.com/FAIRDataPipeline/data-registry/%SOURCE_BRANCH%/static/localregistry.bat
          localregistry.bat -d %INSTALL_DIR% -b %SOURCE_BRANCH%
        env:
          SOURCE_BRANCH: ${{ steps.branch_name.outputs.SOURCE_BRANCH }}
      - name: Deploy registry (Tagged Release)
        if: startsWith(github.ref, 'refs/tags/')
        shell: cmd
        run: |
          wget https://raw.githubusercontent.com/FAIRDataPipeline/data-registry/%SOURCE_TAG%/static/localregistry.bat
          localregistry.bat -d %INSTALL_DIR% -t %SOURCE_TAG%
        env:
          SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}
      - name: Start registry
        shell: cmd
        run:  |
              %INSTALL_DIR%\registry\scripts\start_fair_registry_windows.bat -p %REGISTRY_PORT%
      - name: Test registry
        run: curl http://localhost:%REGISTRY_PORT%/api/

